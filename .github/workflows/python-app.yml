# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pip install pytest
          export PYTHONPATH=src
          pytest
  deploy_to_heroku:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deploy to Heroku
        env:
          HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          cd $GITHUB_WORKSPACE  # Change to the workspace directory
          if [ ! -d ".git" ]; then  # Check if a Git repository exists
            git init  # Initialize a new Git repository if not already initialized
          fi
          git config --global user.email "ddimie283@gmail.com"
          git config --global user.name "Dimie Egberipou"
          git add .  # Add all changes to the staging area
          git commit -m "Initial commit" || true  # Commit changes. Using '|| true' to ignore failure if there are no changes to commit
          git remote add heroku https://heroku:${HEROKU_API_TOKEN}@git.heroku.com/${HEROKU_APP_NAME}.git
          git config credential.helper 'cache --timeout=3600'
          git push heroku HEAD:main -f
